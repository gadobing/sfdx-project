<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>53.0</apiVersion>
    <assignments>
        <description>Assign the queue to the case</description>
        <name>Assign_Case_queue</name>
        <label>Assign Case queue</label>
        <locationX>446</locationX>
        <locationY>551</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Department_Queue.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Review_Status_Change</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assign the case to the current user, When the Status is changed from New to Working.</description>
        <name>Assign_Case_to_the_Current_User</name>
        <label>Assign Case to the Current User</label>
        <locationX>446</locationX>
        <locationY>887</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_Owner_after_Status_Change</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Owner_Change_Date_and_Status</name>
        <label>Set Owner Change Date and Owner</label>
        <locationX>50</locationX>
        <locationY>887</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Owner_Change_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>setOwnerChangeDate</name>
        <label>setOwnerChangeDate</label>
        <locationX>842</locationX>
        <locationY>887</locationY>
        <assignmentItems>
            <assignToReference>$Record.Owner_Change_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>setOwnerDateChange</name>
        <label>setOwnerDateChange</label>
        <locationX>314</locationX>
        <locationY>1127</locationY>
        <assignmentItems>
            <assignToReference>$Record.Owner_Change_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <description>Check if the department field of the case has changed</description>
        <name>Check_if_Department_changed</name>
        <label>Check if Department changed</label>
        <locationX>578</locationX>
        <locationY>311</locationY>
        <defaultConnector>
            <targetReference>Review_Status_Change</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Department_has_changed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Department__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Department__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Department_Queue</targetReference>
            </connector>
            <label>Department has changed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Owner_after_Status_Change</name>
        <label>Check Owner after Status Change</label>
        <locationX>446</locationX>
        <locationY>1007</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_Prior_Owner</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setOwnerDateChange</targetReference>
            </connector>
            <label>Check Prior Owner</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check Whether the Case Status Value is Changed from New to Working.</description>
        <name>Review_Status_Change</name>
        <label>Review Status Change</label>
        <locationX>578</locationX>
        <locationY>767</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_Owner_and_Status</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Working</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Owner_Change_Date_and_Status</targetReference>
            </connector>
            <label>Check Owner and Status</label>
        </rules>
        <rules>
            <name>Status_Changed_from_New_to_Working</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Working</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Case_to_the_Current_User</targetReference>
            </connector>
            <label>Status Changed from New to Working</label>
        </rules>
        <rules>
            <name>Check_Owner</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setOwnerChangeDate</targetReference>
            </connector>
            <label>Check Owner</label>
        </rules>
    </decisions>
    <description>Assign the case record to the department queue.
Assign the case record to the current user when the case status is changed from New to Working.
Calculate the Age in Location by Using Owner Change Date value</description>
    <interviewLabel>CCI {!$Flow.CurrentDateTime}</interviewLabel>
    <label>CCI Case Assignment Flow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Get the Case queue based on the case department field</description>
        <name>Get_Department_Queue</name>
        <label>Get Department Queue</label>
        <locationX>446</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Case_queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Department__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>452</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_if_Department_changed</targetReference>
        </connector>
        <object>Case</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
